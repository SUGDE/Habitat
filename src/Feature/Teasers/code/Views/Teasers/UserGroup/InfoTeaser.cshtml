@using Sitecore.Feature.Teasers
@using Sitecore.Foundation.SitecoreExtensions.Extensions 
@model Sitecore.Mvc.Presentation.RenderingModel
 
@{ var teaserModel = new Sitecore.Feature.Teasers.Models.InfoTeaserModel(Model.Item);}
<div class="container">
    <div class="wpb_column vc_column_container vc_col-sm-12">
        <div class="vc_column-inner ">
            <div class="wpb_wrapper">
                <div class="custom-header">
                    <h1 class="text-center" style="color:;">@Html.Sitecore().Field(Templates.InfoTeaser.Fields.Title.ToString(), Model.Item)</h1><p class="lead text-center" style="color:; ">
                        @Html.Sitecore().Field(Templates.InfoTeaser.Fields.Summary.ToString(), Model.Item)
                    </p>
                </div>
            </div>
        </div>
    </div>
  
    @{int i = 0; }

    @while (i < teaserModel.InfoItems.Count)
    {
        <div class="wpb_column vc_column_container vc_col-sm-4">
            <div class="vc_column-inner ">
                <div class="wpb_wrapper">
                     
                    @{
                        var infoItem = teaserModel.InfoItems[i];
                        i++;
                    }
                    <div class="feature text-center ">
                        @Html.Partial("~/Views/Teasers/UserGroup/IcoTeaser.cshtml", infoItem)
                    </div>

                    @if (i < teaserModel.InfoItems.Count)
                    {
                        var infoItem2 = teaserModel.InfoItems[i];
                        i++;
                        <div class="feature text-center ">
                            @Html.Partial("~/Views/Teasers/UserGroup/IcoTeaser.cshtml", infoItem2)
                        </div>
                    } 
                </div>
            </div>
        </div> 
    }
     
</div>